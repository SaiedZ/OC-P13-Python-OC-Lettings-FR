version: 2.1

orbs:
  # python: circleci/python@2.0.3
  heroku: circleci/heroku@1.2.6

workflows:
  build_test_push_docker_deploy_heroku:
    jobs:
      - build-and-test
      - build-push-docker:
          requires:
            - build-and-test # build image and push only if tests succeeded.
      - deploy-heroku:
          requires:
            - build-push-docker
          filters:
            branches:
              only: master # only deploy when on master


jobs:

  build-and-test:

    docker:
      - image: cimg/python:3.10

    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Installing dependencies
          command: |
            pip install --upgrade pip &&
            pip install -r requirements.txt

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

      - run:
          name: Runing tests
          command: pytest

      - run:
          name: Lingting with flake8
          command: flake8

  build-push-docker:
    # docker: # https://circleci.com/docs/2.0/building-docker-images/
    #  - image: cimg/base:stable # using the machine: true is intresting because we won't need the setup_remote_docker
    machine: true
    steps:
      - checkout
    #  - setup_remote_docker: # https://circleci.com/docs/2.0/building-docker-images/
    #      version: 20.10.14
      - run:
          name: Build Docker image
          command: docker build -t $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1 .
      - run:
          name: Loging to Docker
          command: |
            echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      # build the application image
      - run:
          name: Taging with hash commit and pushing the docker image
          command:  |
            docker tag $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1 $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:latest
            docker push $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1

  deploy-heroku: # this can be any name you choose
      executor: heroku/default # use the default executor defined within the orb
      steps:
        - attach_workspace:
            at: ~/project
        - checkout
        - heroku/install
        - run:
            name: Loging to Docker
            command: |
              echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login --username $DOCKER_HUB_USERNAME --password-stdin
        - run: docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
        - run: docker tag $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1 registry.heroku.com/$HEROKU_APP_NAME/web
        - run: docker push registry.heroku.com/$HEROKU_APP_NAME/web
        - run: heroku container:release web
        # - heroku/deploy-via-git:
        #    force: true # force push when pushing to the heroku remote, see: https://devcenter.heroku.com/articles/git
        # - run: heroku run python manage.py -x migrate -a $HEROKU_APP_NAME
        # - run: heroku run python manage.py -x collectstatic --noinput -a $HEROKU_APP_NAME