version: 2.1

orbs:
  # python: circleci/python@2.0.3
  heroku: circleci/heroku@1.2.6

workflows:
  build_test_push_docker_deploy_heroku:
    jobs:
      - build-test-push-docker
      - deploy-heroku:
          requires:
            - build-and-test
          filters:
            branches:
              only: master # only deploy when on master


jobs:

  build-test-push-docker:
    # using the machine: true is intresting because we won't need the setup_remote_docker
    machine: true
    steps:
      - checkout
      - run:
          name: Build and run Docker image
          command: |
            docker build -t $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1 .
            docker run -d --name oc_lettings -e "PORT=8765" -p 8000:8765 $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1
      - run:
          name: Runing tests
          command: docker exec oc_lettings pytest --html=./test_results/$CIRCLE_SHA1/pytest-report.html --self-contained-html
      - store_artifacts:
          path: test_results
      - run:
          name: Lingting with flake8
          command: docker exec oc_lettings flake8
      - run:
          name: Loging to Docker
          command: |
            echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      - run:
          name: Taging with hash commit and latest and pushing the docker image
          command:  |
            docker tag $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1 $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:latest
            docker push $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1

  deploy-heroku: # this can be any name you choose
      executor: heroku/default # use the default executor defined within the orb
      steps:
        - attach_workspace:
            at: ~/project
        - checkout
        - setup_remote_docker: # https://circleci.com/docs/2.0/building-docker-images/
            version: 20.10.14
        - heroku/install
        - run:
            name: Loging to Docker
            command: |
              echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login --username $DOCKER_HUB_USERNAME --password-stdin
        - run: docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
        - run: docker pull $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1
        - run: docker tag $DOCKER_HUB_USERNAME/$DOCKER_REPO_NAME:$CIRCLE_SHA1 registry.heroku.com/$HEROKU_APP_NAME/web
        - run: docker push registry.heroku.com/$HEROKU_APP_NAME/web
        - run: heroku container:release -a $HEROKU_APP_NAME web
